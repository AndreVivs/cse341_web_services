{
  "swagger": "2.0",
  "info": {
    "title": "API inventory project2",
    "description": "This API provide the information about the products in the store and their details.",
    "version": "1.0.0"
  },
  "host": "project2-sy4v.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": ["Hello Project2"],
        "description": "Root endpoint. Can be used to verify that the API is running.",
        "responses": {
          "200": {
            "description": "API is working"
          }
        }
      }
    },
    "/products/": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Create a new product",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Product information.",
            "schema": {
              "type": "object",
              "required": ["name", "category", "price", "stock", "description"],
              "properties": {
                "name": { "type": "string", "example": "Wallet" },
                "category": { "type": "string", "example": "Accessories" },
                "price": { "type": "string", "example": "120" },
                "stock": { "type": "string", "example": "3" },
                "description": { "type": "string", "example": "Elegant wallet Paco Ran designer" }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/category/{category}": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Get all products by category name",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Category name"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/id/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Get product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "description": "Update a product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Product ID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated product data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "Updated Wallet" },
                "category": { "type": "string", "example": "Accessories" },
                "price": { "type": "string", "example": "150" },
                "stock": { "type": "string", "example": "5" },
                "description": { "type": "string", "example": "Updated description for the wallet" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "description": "Delete a product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Creates a new user in the database.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "User object to create.",
            "schema": {
              "type": "object",
              "required": ["firstName", "lastName", "email", "favoriteColor", "birthdate"],
              "properties": {
                "firstName": { "type": "string", "example": "John" },
                "lastName": { "type": "string", "example": "Doe" },
                "email": { "type": "string", "example": "john.doe@example.com" },
                "favoriteColor": { "type": "string", "example": "Blue" },
                "birthdate": { "type": "string", "example": "1990-01-01" }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/id/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Update user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "John"
                },
                "lastName": {
                  "example": "Doe"
                },
                "email": {
                  "example": "john.doe@example.com"
                },
                "favoriteColor": {
                  "example": "Blue"
                },
                "birthdate": {
                  "example": "1990-01-01"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/addtofavorites/{userId}/favorites/{productId}": {
      "post": {
        "tags": [
          "Add To Favorites"
        ],
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}