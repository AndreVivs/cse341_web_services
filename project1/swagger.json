{
  "swagger": "2.0",
  "info": {
    "title": "API Contacts project1",
    "description": "This API provides information and operations for managing a list of users (contacts).",
    "version": "1.0.0"
  },
  "host": "project1-iqed.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api-docs": {
      "get": {
        "tags": ["Hello Project1"],
        "description": "Root endpoint. Can be used to verify that the API is running.",
        "responses": {
          "200": {
            "description": "API is working"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": ["Users"],
        "description": "Fetches all users from the database.",
        "responses": {
          "200": {
            "description": "A list of users was successfully retrieved."
          },
          "500": {
            "description": "An error occurred while fetching users."
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "description": "Creates a new user in the database.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "User object to create.",
            "schema": {
              "type": "object",
              "required": ["firstName", "lastName", "email", "favoriteColor", "birthdate"],
              "properties": {
                "firstName": { "type": "string", "example": "John" },
                "lastName": { "type": "string", "example": "Doe" },
                "email": { "type": "string", "example": "john.doe@example.com" },
                "favoriteColor": { "type": "string", "example": "Blue" },
                "birthdate": { "type": "string", "example": "1990-01-01" }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User was created successfully."
          },
          "500": {
            "description": "An error occurred while creating the user."
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "description": "Fetches a user by their unique ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the user to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "User found and returned successfully."
          },
          "400": {
            "description": "Invalid ID format."
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "An error occurred while fetching the user."
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "description": "Updates an existing user identified by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the user to update."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Fields to update for the user.",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": { "type": "string", "example": "Jane" },
                "lastName": { "type": "string", "example": "Smith" },
                "email": { "type": "string", "example": "jane.smith@example.com" },
                "favoriteColor": { "type": "string", "example": "Red" },
                "birthdate": { "type": "string", "example": "1985-07-15" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully."
          },
          "400": {
            "description": "Invalid ID format."
          },
          "404": {
            "description": "User not found or no changes made."
          },
          "500": {
            "description": "An error occurred while updating the user."
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "description": "Deletes a user from the database by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the user to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully."
          },
          "400": {
            "description": "Invalid ID format."
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "An error occurred while deleting the user."
          }
        }
      }
    }
  }
}
